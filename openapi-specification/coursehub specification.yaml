openapi: 3.0.0
info:
  title: CourseHub API
  description: This API provides basic operations for CourseHub application.
  version: 1.0.0
servers:
  - url: https://localhost/api/v1
tags:
  - name: UserService
    description: Operations related to users
  - name: CourseService
    description: Operations related to courses
  - name: TestService
    description: Operations related to tests
  - name: FeedbackService
    description: Operations related to feedbacks
paths:
  /users/students:
    post:
      summary: Create a new student
      responses:
        '200':
          description: Student created successfully
      tags:
        - UserService
    get:
      summary: Get all students
      responses:
        '200':
          description: Student created!
      tags:
        - UserService
  /users/students/{studentId}:
    get:
      summary: Get student by ID
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Student retrieved!
      tags:
        - UserService
  /users/students/{studentId}/student-fullname:
    patch:
      summary: Edit student full name by ID
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Student updated!
      tags:
        - UserService
  /users/students/{studentId}/courses:      
    post:
      summary: Add course to user's course list
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Course added to student course list!
      tags:
        - UserService
    delete:
      summary: Delete course from user's course list
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Course deleted!
      tags:
        - UserService
  /users/subscribers/{courseId}:       
    get:
      summary: Get subscribers for course by courseID
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Subscribers retrieved!
      tags:
        - UserService    
  /users/organizers:
    post:
      summary: Create a new Organizer
      responses:
        '201':
          description: Organizer created successfully
      tags:
        - UserService
    get:
      summary: Get all organizers
      responses:
        '200':
          description: Organizer created!
      tags:
        - UserService
  /users/organizers/{organizerId}:
    get:
      summary: Get organizer by ID
      parameters:
        - name: organizerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Organizer retrieved!
      tags:
        - UserService
  /users/organizers/{organizerId}/organizer-companyname:
    patch:
      summary: Edit organizer company name by ID
      parameters:
        - name: organizerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Organizer updated!
      tags:
        - UserService
  /users/organizers/{organizerId}/courses:
    post:
      summary: Add course to organizer's course list
      parameters:
        - name: organizerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Course added to organizer course list!
      tags:
        - UserService
    delete:
      summary: Delete course from organizer's course list
      parameters:
        - name: organizerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Course deleted from organizer course list!
      tags:
        - UserService
  /users/login:
    post:
      summary: Login into user account
      responses:
        '201':
          description: User successfully logged into account!
      tags:
        - UserService
  /users/logout:
    post:
      summary: Logout from user account
      responses:
        '200':
          description: User successfully logout from account!
      tags:
        - UserService
  /users/password-recovery-request:
    post:
      summary: Create password change request using email linked to account
      responses:
        '201':
          description: Password recovery request successfully submited!
      tags:
        - UserService
  /users/change-password-by-recovery-code:
    patch:
      summary: Change the password using the recovery code
      responses:
        '200':
          description: Password updated!
      tags:
        - UserService
  /users/change-password-by-previous-password:
    patch:
      summary: Change the password using the previous password
      responses:
        '200':
          description: Password updated!
      tags:
        - UserService
  /courses:
    post:
      summary: Create a new course
      responses:
        '201':
          description: Course created!
      tags:
        - CourseService
    get:
      summary: Get all courses
      responses:
        '200':
          description: Courses retrived!
      tags:
        - CourseService
  /courses/{courseId}:
    get:
      summary: Get course by ID
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course retrived!
      tags:
        - CourseService
    put:
      summary: Edit course by ID
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course updated!
      tags:
        - CourseService
    delete:
      summary: Delete course by ID
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Course deleted!
      tags:
        - CourseService
  /courses/{courseId}/hide-course:
    patch:
      summary: Change course visibility
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course visiability was changed!
      tags:
        - CourseService
  /courses/{courseId}/topics:
    post:
      summary: Create a new topic in an existing course by ID
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Topic created!
      tags:
        - CourseService
    get:
      summary: Get all existing topics by —Åourse ID
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Topics retrived!
      tags:
        - CourseService
  /courses/topics/{topicId}:
    get:
      summary: Get an existing topic by topic ID
      parameters:
        - name: topicId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: Topic retrived!
      tags:
        - CourseService
    put:
      summary: Edit an existing topic by topic ID
      parameters:
        - name: topicId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Topic updated!
      tags:
        - CourseService
    delete:
      summary: Delete an existing topic by topic ID
      parameters:
        - name: topicId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Topic deleted!
      tags:
        - CourseService
  /courses/{courseId}/lessons:
    post:
      summary: Create a new lesson in an existing course
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Lesson created!
      tags:
        - CourseService
    get:
      summary: Get all lessons in an existing course
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lessons retrived!
      tags:
        - CourseService
  /courses/lessons/{lessonId}:
    get:
      summary: Get lesson in an existing course
      parameters:
        - name: lessonId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: Lesson retrived!
      tags:
        - CourseService
    put:
      summary: Edit lesson in an existing course
      parameters:
        - name: lessonId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lesson updated!
      tags:
        - CourseService
    delete:
      summary: Delete lesson in an existing course
      parameters:
        - name: lessonId
          in: path
          required: true
          schema:
            type: integer 
      responses:
        '204':
          description: Lesson deleted!
      tags:
        - CourseService
  /courses/subscriptions/{userId}:
    get:
      summary: Get courses in subscriptions list of user by userId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Courses in subscriptions list retrieved!
      tags:
        - CourseService
  /courses/subscriptions/{userId}/course/{courseId}:
    post:
      summary: Add subscriber to course
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: courseId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '201':
          description: Subscriber to course added!
      tags:
        - CourseService
    delete:
      summary: Remove subscriber from course
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Subscriber from course removed!
      tags:
        - CourseService      
  /tests/topics/{topicId}:
    post:
      summary: Create a new test
      parameters:
        - name: topicId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Test created!
      tags:
        - TestService
    get:
      summary: Get all tests in topic
      parameters:
        - name: topicId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: Tests retrived!
      tags:
        - TestService
  /tests/{testId}:
    get:
      summary: Get an existing test by ID
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Test retrived!
      tags:
        - TestService
    put:
      summary: Edit an existing test by ID
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Test updated!
      tags:
        - TestService
    delete:
      summary: Delete an existing test by ID
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Test deleted!
      tags:
        - TestService
  /tests/{testId}/questions:
    post:
      summary: Create a question
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Questions created!
      tags:
        - TestService
    get:
      summary: Get all questions by test ID
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Questions retrieved!
      tags:
        - TestService
  /tests/questions/{questionId}:
    get:
      summary: Get an existing question by ID
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: Question retrieved!
      tags:
        - TestService
    put:
      summary: Edit an existing question by test and question ID
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Question updated!
      tags:
        - TestService
    delete:
      summary: Delete an existing question by test and question ID
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Question deleted!
      tags:
        - TestService
  /tests/questions/{questionId}/answers:
    post:
      summary: Create a answer
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '201':
          description: Answer created!
      tags:
        - TestService
    get:
      summary: Get all answers by question id
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: Answers retrieved!
      tags:
        - TestService
  /tests/questions/{questionId}/give-answer/{answerId}:
    put:
      summary: Given an answer
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
        - name: answerId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: Answer given!
      tags:
        - TestService      
  /tests/answers/{answerId}:
    get:
      summary: Get an existing answer by ID
      parameters:
        - name: answerId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: Answer retrieved!
      tags:
        - TestService
    put:
      summary: Edit an existing answer by test and question ID
      parameters:
        - name: answerId
          in: path
          required: true
          schema:
            type: integer 
      responses:
        '200':
          description: Answer updated!
      tags:
        - TestService
    delete:
      summary: Delete an existing answer by test and question ID
      parameters:
        - name: answerId
          in: path
          required: true
          schema:
            type: integer 
      responses:
        '204':
          description: Answer deleted!
      tags:
        - TestService      
  /tests/{testId}/test-results:
    post:
      summary: Create a new test results by test ID
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tests results created!
      tags:
        - TestService
    get:
      summary: Get all test results by test ID
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Tests results retrieved!
      tags:
        - TestService
  /tests/{testId}/test-results/{userResultId}:
    get:
      summary: Get an existing test results by test  and test results ID
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: integer
        - name: userResultId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: Test results retrieved!
      tags:
        - TestService
    put:
      summary: Edit an existing test results by test and test results ID
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: integer
        - name: userResultId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Test results updated!
      tags:
        - TestService
    delete:
      summary: Delete an existing test results by test and test results ID
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: integer
        - name: userResultId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Test results deleted!
      tags:
        - TestService
  /feedbacks:
    post:
      summary: Create a new feedback
      responses:
        '201':
          description: Feedback created successfully
      tags:
        - FeedbackService
  /feedbacks/courses/{courseId}:
    get:
      summary: Get all feedbacks for a specific course by ID
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Feedback retrieved successfully
      tags:
        - FeedbackService
  /feedbacks/{feedbackId}/courses/{courseId}:
    get:
      summary: Get feedback for a specific course by course and feedback ID
      parameters:
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
        - name: courseId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: Feedback retrieved successfully
      tags:
        - FeedbackService
  /feedbacks/students/{studentId}:
    get:
      summary: Get all feedbacks for a specific student by ID
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Feedback retrieved successfully
      tags:
        - FeedbackService
  /feedbacks/{feedbackId}/students/{studentId}:
    get:
      summary: Get feedback for a specific student by student and feedback ID
      parameters:
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
        - name: studentId
          in: path
          required: true
          schema:
            type: integer    
      responses:
        '200':
          description: Feedback retrieved successfully
      tags:
        - FeedbackService
  /feedbacks/{feedbackId}:
    put:
      summary: Update feedback by ID
      parameters:
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Feedback updated successfully
      tags:
        - FeedbackService
    delete:
      summary: Delete feedback by ID
      parameters:
        - name: feedbackId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Feedback deleted successfully
      tags:
        - FeedbackService